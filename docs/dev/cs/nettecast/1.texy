Nacházíte se ve scénáři prvního dílu **Nettecast**:[nettecast], pokud chcete můžete [přejít na seznam dílů | nettecast].

Pokud vás zajímá, jak tento screencast dopadl, můžete se "na něj podívat":[/screencast/stahnuti-a-zprovozneni-nette-framework].

Nettecast - 1. díl - scénář
==================

1. úvodní znělka
------------------

2. uvodní slide - informace o tématu
------------------------------

3. Přestavení
-------------
Mluvené slovo + video hovořícího moderátora, který se představuje (to budu jako já :D).

"Dobrý den, vítám Vás u prvního dílu **Nettecastu**, tedy screencastu o **Nette Frameworku**."

"V tomto díle si povíme o stažení a zprovoznění **Nette Frameworku**. Tak pojďme na to..."

4. web Nette
-------------
"Začneme samozřejmě na webu **Nette**, jedná se o adresu http://nette.org."

"Na webu **Nette** je několik sekcí, které nám pomohou při vývoji webových aplikací."

"Nejdůležitější z nich je bezesporu Dokumentace, kde je popsáno používání **Nette Frameworku.**
Dále je tu **API dokumentace**, kde jsou popsané všechny třídy a jejich metody. S žádostí o radu nebo pomoc  se můžete obrátit na fórum - tam se pohybuje mnoho lidí, kteří vám rádi poradí."

"Nás v tomto okamžiku bude ale zajímat sekce **Download**, neboli **Stáhnout**."

5. Stažení
-------------

"Je možné si stáhnout buď **stable** (stabilní), či **development (vývojovou) verzi**. Jakou zvolit? Pokud hodláte na **Nette** stavět zakázku, zvolte **stable** verzi, kde je garantováno, že vám aplikace pojede - **stable verze**. Naopak pokud chcete experimentovat, stáhněte si **development** verzi, ve které se promítají veškeré vývojové novinky v **Nette**. Ty nemusí být vždy 100% zpětně kompatibilní."

"Každou verzi **Nette** je možné stáhnout ve třech podobách. Jedná se o dvě verze pro PHP 5.2 a verzi pro PHP 5.3. Verze pro **PHP 5.3** používá **jmenné prostory** - tzv. **namespaces.** Ty však nejsou v **PHP 5.2** podporovány. Pro PHP 5.2 proto existují hned dvě verze, normální a **prefixed**, rozdíl je pouze v tom, že u **prefixed** verze jsou veškeré názvy třídy doplněné na začátku písmenem **N** - např. třída **Object** v normální verzi se jmenuje **NObject** v prefixed. Je to z toho důvodu, že některé názvy tříd v **Nette** jsou poměrně obecná anglická slova, a v kombinaci s jinými knihovnami by mohlo dojít ke konfliktu."

"Pro naši ukázku zvolíme hned první archiv, tedy normální verzi pro PHP 5.2."

(stáhni prosím verzi 0.9)

"Vidíme, že se **Nette** stáhlo opravdu svižně - vždyť má také opravdu malou velikost - to je jedna z výhod **Nette**."

6. Popis archivu
-----------------

"Archiv si rozbalíme a podíváme se, co obsahuje."

"Přímo v rootu archivu se nachází textové soubory s licencí a dalšími informacemi o **Nette**. My se však budeme věnovat adresářům `Nette` a `Nette.minified`. V adresáři **Nette** se nachází samotný framework. Všimněte si souboru `loader.php`, na který za chvíli přijde řeč."

"V adresáři je `Nette.minified` je tzv. **zminimalizovaná** podoba **Nette frameworku**. Tato složka obsahuje pouze jediný soubor, opět nazvaný `loader.php`, který v sobě koncentruje všechny soubory, které jsou uloženy v adresáři Nette -- podobně jako např. javascriptový framework jQuery, který je také možné stáhnout v tzv. zminimalizované verzi. Výhoda zminimalizované verze se projeví při nahrávání na FTP vašeho webhostera, stačí totiž nahrát jeden jediný malý soubor, nikoli desítky. To ulehčuje práci. Pro vyvoj však zásadně používáme verzi plnou, v kódu se lépe orientuje, hledá a ladí. Jinak jsou plná a zminimalizovaná verze frameworku naprosto funkčně shodné."

"Dalším adresářem je `examples`, který obsahuje příklady práce s **Nette**."

7. Examples - příklady
--------------
"Ve složce s příklady naleznete mnoho učebního materiálu, doporučuji si jej celý prostudovat. Je zde umístěno několik již hotových funkčních aplikací.
Jednak se jedná o známý příklad "**Akrabat**", který můžete znát jako příklad pro Zend Framework. Další složka fifteen obsahuje hotovou hru, kdy je obrázek rozdělen
na 4x4 čtverce, jeden čtverec je odstraněn a úkolen hráče je prohazovat jednotlivé čtverce s chybějícím tak dlouho, až složí původní obrázek. Zajímavá je skutečnost, že
přesto, že celá aplikace je **AJAXová**, tak **funguje naprosto shodně i s vypnutým javascriptem**."

(uvažuju, že Akrabat.old dám mimo distribuci, takže raději nezmiňovat)

"Ve složce `forms` je celá řada příkladů práce s formuláři v **Nette**."

"Pojdmě se tedy nyní podívat, jak **Nette** zprovoznit."

8. Zprovoznění Nette
---------------------

"V adresářové struktuře webového serveru si vytvoříme novou složku, do té nakopírujeme složku **Nette**, ve které je obsažen celý framework. Nyní můžeme vytvořit soubor `priklad.php`"

"Nejprve si **Nette** načteme - to je velmi jednoduché, stačí vložit už dříve zmíněný soubor `loader.php` nacházející se ve složce `Nette`. Třeba takto:
-> `require dirname(__FILE__) . '/Nette/loader.php'`;
nyní už je celý **Nette framework** připraven k použití. Přitom každá část, kterou použijete, bude automaticky načtena až v okamžiku, kdy ji budete potřebovat."

9. Vypsání textu, zjištění zda je **Nette** přítomno
-----------------------------------------------
"Nyní, po načtení **Nette**, můžeme zkontrolovat, zda je opravdu přítomno, to můžeme udělat např. tak, že zavoláme statickou metodu `Framework::promo();`, která vykreslí ikonku."

"Pokud si `priklad.php` pustíme vidíme,... "

-> moderátor - já - ukazuje výsledek

"... že **Nette** nám vykreslilo malou promo ikomku -- to znamená, že nám **Nette** funguje! Pojďme si ukázat, jak nám Nette může usadnit práci a čas, něco, co by nám bez **Nette** trvalo dlouho."

10. Formulář rychleji? Ale jistě!
---------------------------------
"Dejme tomu, že budeme chtít vypsat formulář o několika položkách. To sice není v HTML složité, ale pokud člověk nechce na nic zapomenout, trvá to déle, než by si člověk přál. My ale máme **Nette**!"

"Vytvoříme nový formulář. A jak?"

"Velice jednoduše:"

`$form = new Form;`

"Dále přidáme do formuláře nějaké prvky. Dejme tomu, že chceme, aby obsahoval např. text input s popisem Jméno."

"V Nette takový prvek do formuláře přidáme velmi snadno:"

`$form->addText('name', 'Jméno:');`

"První parametr je název inputu, druhý jeho popisek."

"Pod inputem se jménem bychom chtěli mít políčko pro heslo -- "

 `$form->addPassword('password', 'Heslo:');"`

"Ještě přidáme odesílací tlačítko"

 `$form->addSubmit('login', 'Přihlásit');"`

"Nakonec formulář vypíšeme - to není nic složitého, stačí pouze použít `echo $form;`."

"A teď je čas se podívat na výsledek našeho snažení -- "

-> moderátor - já - ukazuje výsledek

"Vidíme, že pouhými několika řádky kódu jsme vykreslili formulář. V dalším screencastu si ukážeme, jak formulář oživit, přidat ošetření a validaci vstupů a mnoho dalšího."

11. Závěř
-----------

"Ukázali jsme si, jak **Nette** stáhnout a zprovoznit. Podívejte se na další díly a dozvíte se, jak hodně vám **Nette framework** zjednoduší tvorbu webových aplikací!"

"Děkuji za pozornost!"

/--
Dotazy na tento scénář nebo na Nettecast piště prosím Tomikovi (autorovi tohoto textu) na tomik@jmx.cz
\--
