"Quickstart":http://doc.nette.org/cs/quickstart refactoring
*********************

repo: https://github.com/HosipLan/nette-quickstart

- <del>dát všemu namespacy</del>
- <del>místo tagů použít v repozitáři branche</del>
- <del>u všech použití modelů popřemýšlet nad napsáním speciální metody v příslušné Table instanci</del>

<del>

"Začínáme":http://doc.nette.org/cs/quickstart/start
-------------

- zmínit FAQ pokud se nedaří rozběhat sandbox
- přepsat "adresář models"
- setDebugMode() povoluje "ladění", špatná formulace
- poznámka o přepínání je strašně dlouhá, shrnul bych to větou a odkázal do faq



"Database":http://doc.nette.org/cs/quickstart/database
------------

- opravit Table třídu, aby nevyžadovala název tabulky v konstruktoru
- úplně vyhodit službu `database`, je zbytečná
- vyhodit zmínky o ruční konfiguraci, všechno je v odpovídající sekci dokumentace


"Presenter":http://doc.nette.org/cs/quickstart/presenter
--------------

- přepsat "Spojení s modelem"
- přepsat "TaskPresenter"
- popřemýšlet, jestli by nebylo lepší titulek udělat pomocí bloku
- přidat kapitolu o injektování


"Formuláře":http://doc.nette.org/cs/quickstart/forms
-----------

- z úvodního odstavce prolinkovat termíny "signály" a "události"
- použít novou funkci Nette\Object - "vracení metody jako closure objekt":https://github.com/nette/sandbox/commit/1fadacf45974aa8f8fd12cc0ace8b9c740f432b1
- obsluha formuláře na vytvoření tasku musí mít metodu v Tasks
- "Formulář na vytvoření seznamu úkolů" metoda do Tasklists


"Komponenty":http://doc.nette.org/cs/quickstart/components
-----------

- vyhazovat `BadRequestException` v továrnách, pokud je $this->tasklist prázdný + vysvětlení


"Authenticator":http://doc.nette.org/cs/quickstart/authentication
-----------

- hesla budeme "bezpodmínečně solit":https://github.com/foglcz/sandbox/blob/master/app/model/UsersModel.php#L33 vysvětlit `crypt()`
- "Přesměrování nepřihlášeného uživatele" místo `startup()` použít `checkRequirements()` zmínit výchozí implementaci a upravit místo vyhazování výjimky na přesměrování.
- "Formulář pro změnu hesla" metoda na změnu hesla patří do `Users`, ukázat jak propojit služby, které na sobě vzájemně závisí pomocí konfigurace

</del>


Závěr + Nalezené WTF
----------

- `$this->context` ve `startup()`. Shodli jsme se ale, že je to lepší než co bylo předtím a snadno se to přepíše na `inject*()`.
- Chce to `PresenterFactory::$mapping`
- kontrola přihlášení v továrničce komponenty, chce to volat `PresenterComponent::checkRequirements()` i nad továrničkami, aby se mohla použít annotace


Poznámky ke kódu:
---------

Předně díky moc za úpravy. Narazil jsem v kódu na několik nejasností:
1) "calculateHash()":https://github.com/HosipLan/nette-quickstart/blob/master/app/model/Authenticator.php#L64 - proč je salt náhodný? Pak přece nelze heslo ověřit. (A když už, máme metodu random). A proč se jako sůl používá v metodě authenticate() heslo?
2) zachytávání "Exception":https://github.com/HosipLan/nette-quickstart/blob/master/app/presenters/BasePresenter.php#L27 - měla by tam být konkrétní výjimka. Ale obecně, asi by bylo pro 2.0.x vhodnější dělat kontrolu v každém presenteru zvlášť, checkRequirements není dotažené...
3) $this->context - tomu bych se za každou cenu vyhnul. Proč nepoužít setContext() a později předělat na injectContext()?
4) "ForbiddenRequestException":https://github.com/HosipLan/nette-quickstart/blob/master/app/presenters/BasePresenter.php#L59 - ta se používá v případech, kdy uživatel přihlášen je. Tady má být přesměrování na přihlašovací forumálář.
5) "$taskList === NULL":https://github.com/HosipLan/nette-quickstart/blob/master/app/presenters/TaskPresenter.php#L72 - tuhle podmínku nechápu, taskList je přece naplněn vždy


Odpovědi
--------

**1)** funkce [php:crypt()] přijímá dva argumenty, co má hashovat a podle čeho má hashovat. Z druhého argumentu si podle tvaru hashe přečte typ algoritmu (prvních pár znaků) a tím pak zahashuje první argument. `crypt()` si drží sůl jako součást hashe. Pokud to ale chápu špatně (což by bylo divné, protože ten kód funguje), tak mě oprav :) Co se týče funkce `Strings::random()`, vyměním

- https://twitter.com/foglcz/status/231738899125383168
- https://twitter.com/foglcz/status/231739414831853568

**2)** Takže vždy ve startup() klasickou `if !loggedin: redirect`

**3)** tady mi vznikl trochu hell a "hádali jsme se o tom na chatu":http://nezmar.jabbim.cz/logs/nette@conf.netlab.cz/2012/08/02.html#22:03:27.643848 a "přesně to stejné jsem říkal také :)"((viď Majkl578)) Jde o to, že v BasePresenteru potřebuju jednu závislost a musel bych překrývat `setContext()`, ale to stejně dělám se `startup()`. Takže se vrátit k

/--php
public function setContext(Tasks $tasks, Users $users, TaskLists $taskLists)
{
	parent::setContext($taskLists);
	$this->tasks = $tasks;
	$this->users = $users;
	$this->taskLists = $taskLists;
}
\--

**4)** To je pro mě novinka. Ale dává to smysl :)

**5)** Ne, `$this->taskLists` je naplněn vždy, `$this->taskList` je naplněn pouze pokud je vykonána akce `default`, což nemusí pokud si pohraju s url. Možná je to paranoia, ale sem to rozhodně patří. Ale uvědomil jsem si, že jsem zbytečně paranoidní v jiných továrničkách, kde používám pouze vlastnosti naplněné ve `startup()`.


Vypracování
----------


- vyčistěn repozitář


**1)** Vyměněno za `Strings::random()`

**3)** Tak ne. https://twitter.com/HosipLan/status/231742841896988674/photo/1/large Tohle vzdávám, bez `inject*()` netuším jak to udělat jinak.
