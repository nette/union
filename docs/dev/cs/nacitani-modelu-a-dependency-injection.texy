Načítání modelu a Dependency Injection
**************************************

Náhrada dynamického načítání modelů (NotORM).


1) Připravujeme
===

Rozmístění souborů
---
Kde jaký soubor dáti...



ModelsExtension.php
---

/--php
class ModelsExtension extends Nette\Config\CompilerExtension
{

}
\--


2) Registrujeme
===

config.neon
---

/--neon
common:
	includes:
	- models.neon
\--



models.neon
---

/--neon
models:
	services:
		balance:
			class: Models\Balance
			arguments: [@database, @pdo, @cache]
		match:
			class: Models\Match
			arguments: [@database, @pdo, @cache]
\--


bootstrap.php
---

/--php
$configurator->onCompile[] = function($configurator, $compiler) {
	$compiler->addExtension("models", new ModelsExtension);
};
\--


3) Používáme
===


BasePresenter.php
---

Do `BasePresenteru` si přidáme zkratku, která nám **ušetří trochu psaní**: tedy místo `$this->context->models->pozadovanyModel` bude stačit `$this->models->pozadovanyModel`. Při neustálém používání modelů tuto zkratku oceníme.

/--php
/**
 * Models shortcut
 *
 * @return SystemContainer_models
 */
public function getModels()
{
	return $this->context->models;
}
\--

.[note]
Nezpomeňte k funkci *getModels* doplnit anotaci **@return**, nebo se připravíte o možnost automatického napovídání ze SystemContaineru.

MyPresenter.php
---

/--php
$results = $this->models->balance->fetchAll();
\--
