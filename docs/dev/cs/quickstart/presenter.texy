Presenters and templates
********************

.[perex]
Let's focus on an application logic. This chapter describes presenters,
Latte templates, and a connection between them and the model, we have defined in the previous chapter.


Before we start, we should know at least some basics about MVP pattern. The name MVP is a shortcut of it's components:

- Model - data manipulation layer. It is completely separated from the rest of the application. It only communicate with preseters.

- View - a front-end definition layer. It renders requested data to the user using templates.

- Presenter - a connection layer. Presenter connects Models and Views. Handles requests, asks Models for data and then delegates them to the current View.


.[note]
The MVP pattern is similar to a MVC ((Model-View-Controller)) pattern. The main difference between them is in the connection handler, Presenter Ã— Controller. A Presenter delegates only, but a Controller also handles UI events.

We have prepared our Model in the previous chapter, so Presenter and View are still missing. In Nette, each Presenter has its own Views, so we will continue with both simultaneously.



HomepagePresenter
=================

First, create a `HomepagePresenter`. This will ensure the homepage of the application. In the skeleton application code, this class is defined as follows:

/---php
class HomepagePresenter extends BasePresenter
{

	public function renderDefault()
	{
	    $this->template->anyVariable = 'any value';
	}

}
\---

It has the only method `renderDefault()`. That takes care of the transmission of data to the view called `default`. Presenter templates can be found in a folder `templates/PresenterName`. In this case, the templates will be placed in `templates/Homepage/`. To be more specific, our requested template is `default.latte`. When you run the application, required actions in the presenter are executed first, and then, depending on the template, renders. The sequence of these steps is presented in the following diagram:

.<>
[* 04-lifecycle2.gif *]
