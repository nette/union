Vykreslování
************

Ve výchozím nastavení Nette formuláře nabízí automatické vykreslování pomocí tzv. [ConventionalRendereru | api:Nette\Forms\ConventionalRenderer]. Dále je možné formulář [vykreslovat ručně | #Ruční vykreslování], což je vhodné zejména ve chvílích, kdy je formulář složitý a jeho vizuální podoba má být *nestandardní*.


Přizpůsobení HTML výstupu formulářových prvků
=============================================
Pro přizpůsobení HTML vlastností políčka použijeme metodu [getControlPrototype() | api:Nette\Forms\FormControl::getControlPrototype()]. Získáme tak šablonu, podle které bude políčko vyrobeno v podobě [Nette\Web\Html | api:] objektu.


/--php
$form->addText('name', 'Název');

$controlPrototype = $form['name']->getControlPrototype(); //instance Nette\Web\Html
$controlPrototype->class('big')->style(array('color' => 'red'));
\--
Totéž lze napsat bez použití proměnné pro instanci HTML prototypu.
/--php
$form->addText('name', 'Název')
     ->getControlPrototype()
     ->class('big')
     ->style(array('color' => 'red'));
\--
Je důležité uvědomit si, že na zavoláním poslední metody (style) dostáváme instanci objektu Nette\Web\Html, tudíž následně není možné upravit formulářový prvek plynulým zápisem. Je proto nutné provést potřebnou konfiguraci před úpravou html prvku nebo následně získat jeho znovu instanci (první způsob). .[caution]


Pro `label` je postup obdobný, liší se pouze název metody [getLabelPrototype() | api:Nette\Forms\FormControl::getLabelPrototype()]:

/--php
$form->addText('name', 'Název')->getLabelPrototype()->class('label-big');
\--

Obdobně můžeme upravit i HTML element samotného formuláře:
/--php
$form->getElementPrototype()->class('very-nice-form');
\--

Skupiny
=======
Formulářové prvky lze seskupovat i čistě vizuální cestou (tedy ne pomocí kontejneru). Slouží k tomu skupiny a metoda [addGroup($name) | api:Nette\Forms\Form::addGroup()]. Jedná se o Nette ekvivalent k `<fieldset>` a `<legend>`, který bude obsahovat data z parametru `$name`. Jejich chování se od prvků značně liší:
- přidávají se na formulář
- nijak neovlivňují strukturu dat
- jsou vykreslovány v pořadí v jakém byly přidány
- pokud existuje alespoň jedna skupina, prvky bez skupiny se vykreslují až po vykreslení skupin
K práci se skupinami se používají tyto metody:
- [addGroup | api:Nette\Forms\Form::addGroup]: slouží k přidání nové a otevření skupiny
- [setCurrentGroup | api:Nette\Forms\FormContainer::setCurrentGroup]: otevře již existující skupinu
- [removeGroup | api:Nette\Forms\Form::removeGroup]: odstraní skupinu
/--php
$form->addGroup('Osobní info');//následující prvky spadají do této skupiny
$form->addText('name', 'Jméno a příjmení');
$form->addText('email', 'E-mail');
$form->setCurrentGroup(NULL); //následující prvky nejsou v žádné skupině
$form->addSelect('question', 'Máte rádi psy?', array(
    'yes' => 'Ano',
    'no' => 'Na talíři',
));
\--


ConventionalRenderer
====================
ConvetionalRenderer byl nahrazen DefaultFormRenderer (ověřit)

Wrappery
--------

Toggle
------

Options
-------


InstantClientScript
===================

Ruční vykreslování
==================
/--code latte
{control myForm begin}
{control myForm errors}
<p>{$control['myForm']['login']->label} // nebo {$control['myForm']['login']->getLabel('Přímo v šabloně..')}
<p>{$control['myForm']['login']->control}
{control myForm end}
\--

- via "Manuální renderování":http://forum.nette.org/cs/4004-manual-render-a-krajsi-zapis-sablony
- pro PHP5.3 "renderování pomocí vlastních maker":http://forum.nette.org/cs/4286-makra-pro-rucni-vykreslovani-formularu
- několik příkladů také v distribuci ve složce /examples/forms/
