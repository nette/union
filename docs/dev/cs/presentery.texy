Presentery
**********

SKELETON .[caution]

Co je to presenter
==================
srozumitelná teorie

Akce a pohledy
==============
>popis

O tomto rozsáhlém tématu dále pojednává podkategorie [Action vs. View | Presentery/Action vs. View].


Persistentní parametry a komponenty
===================================
>anotace, typy


Životní cyklus
==============
Stejně jako [aplikace | Aplikace], i presenter má svůj životní cyklus.

Inicializace
------------
[startup | api:Nette\Application\Presenter::startup] - povinnost volat parenta

Akce
----
actionX

Signály
-------
zmínit signály pro potomky, jak se překládají apod.

Pohled
------
renderX - možnost změny v akci/signálu

Ukončení
--------
[shutdown | api:Nette\Application\Presenter::shutdown] - vypnutí, výjimka v argumentu



Typy odpovědí presenteru
========================
Odpovědí aplikace nazýváme instanci třídy, která implementuje rozhraní [Nette\Application\IPresenterResponse | api:].

Vykreslení
----------
Vykreslovací odpověď implementuje třída [Nette\Application\RenderResponse | api:]. Slouží k odeslání výstupu uživateli.

JSON
----

Soubor ke stažení
-----------------

Interně používané odpovědi
--------------------------
Nette interně používá další dva typy odpovědi:
- [Nette\Application\RedirectingResponse | api:]: Slouží k přesměrování aplikace na úrovni HTTP vrstvy, jde tedy o změnu URL adresy. Zpravidla je vyvolána metodami [Nette\Application\PresenterComponent:redirect | api:]() a [Nette\Application\Presenter::redirectUri | api:]().
- [Nette\Application\ForwardingResponse | api:]: Slouží k internímu přesměrování aplikace na jiný [presenter | Presentery], potažmo jeho [akci | Presentery/Action vs. View]. Zpravidla je vyvolána metodou [Nette\Application\Presenter::forward | api]().

Vlastní
-------
Implementace rozhraní [Nette\Application\IPresenterResponse | api:]
