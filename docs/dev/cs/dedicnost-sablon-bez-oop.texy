Dědičnost šablon
****************

Základy dědičnosti
------------------

Začněme od začátku – máme jednoduchou stránku:

**FirstPage.phtml**
/--html
<!doctype html>
<html>
	<head>
		<title>První stránka | Můj web</title>
	</head>
	<body>
		<div id="leftColumn"><ul>...</ul></div>
		<div id="content"><p>Mauris consectetur lobortis purus eget...</p></div>
	</body>
</html>
\--

Vlastně – máme i druhou:

**SecondPage.phtml**
/--html
<!doctype html>
<html>
	<head>
		<title>Druhá stránka | Můj web</title>
	</head>
	<body>
		<div id="leftColumn"><ul>...</ul></div>
		<div id="content"><p>Proin eu sem purus. Donec bibendum vestibulum...</p></div>
	</body>
</html>
\--

Protože stránky se liší akorát částí `<title>` a obsahem `#content`, tak je výhodné vytvořit nadřazenou šablonu, od které budou stránky FirstPage.phtml a SecondPage.phtml dědit.

**ParentPage.phtml**
/--html
<!doctype html>
<html>
	<head>
		<title>{include #title} | Můj web</title>
	</head>
	<body>
		<div id="leftColumn"><ul>...</ul></div>
		<div id="content">{include #content}</div>
	</body>
</html>
\--

**FirstPage.phtml**

/--html
{extends ParentPage.phtml}

{block #title}První stránka{/block}
{block #content}<p>Mauris consectetur lobortis purus eget...</p>{/block}
\--

**SecondPage.phtml**
/--html
{extends ParentPage.phtml}

{block #title}Druhá stránka{/block}
{block #content}<p>Proin eu sem purus. Donec bibendum vestibulum...</p>{/block}
\--


Přepisování nadřazených bloků
-----------------------------

Někdy může být výhodné, aby nadřazená šablona definovala výchozí obsah a potomci ho pak mohli (nikoliv museli) přepsat.

V šablonách se takového chování dosahuje nahrazením "abstraktní definice" `{include #jmenoBloku}` za konkrétní definici bloku (`{block #jmenoBloku}...{/block}`). Konkrétně v našem případě to bude vypadat takto:

**ParentPage.phtml**
/--html
<!doctype html>
<html>
	<head>
		<title>{block #title}Výchozí titulek{/block} | Můj web</title>
	</head>
	<body>
		<div id="leftColumn"><ul>...</ul></div>
		<div id="content">{include #content}</div>
	</body>
</html>
\--


Načtení nadřazeného bloku
------------------------
Blok ale nemusíme jen přepsat, ale je možné k němu i něco připsat pomocí načtení rodičovského bloku – `{include #parent}`.

**ParentPage.phtml**
/--html
<!doctype html>
<html>
	<head>
		<title>{block #title}Můj web{/block}</title>
	</head>
	<body>
		<div id="leftColumn"><ul>...</ul></div>
		<div id="content">{include #content}</div>
	</body>
</html>
\--

**FirstPage.phtml**

/--html
{extends ParentPage.phtml}

{block #title}První stránka | {include #parent}{/block}
{block #content}<p>Mauris consectetur lobortis purus eget...</p>{/block}
\--

**SecondPage.phtml**
/--html
{extends ParentPage.phtml}

{block #title}Druhá stránka | {include #parent}{/block}
{block #content}<p>Proin eu sem purus. Donec bibendum vestibulum...</p>{/block}
\--

Platnost proměnných
-------------------
Při **deklaraci** bloku do něj automaticky přecházejí všechny **lokální i [globální | api:Nette\Templates\BaseTemplate::getParams()]** proměnné. Změna hodnoty lokální proměnné se projeví pouze v daném bloku (a tím pádem i v dceřiných blocích). Nejlépe to bude vidět asi na příkladu:

/--html
{assign text => "A"}

{block #alpha}
	{$text} <!-- Vypíše "A" --><br>
	{assign text => "B"}
	{$text} <!-- Vypíše "B" --><br>

	{block #beta}
		{$text} <!-- Vypíše "B" --><br>
	{/block}
{/block}

{$text} <!-- Vypíše "A" --><br>
\--

Při **vložení** bloku do něj přecházejí automaticky **pouze globální** proměnné šablony. Lokální proměnné je možné v případě potřeby předat ručně.

/--html
{include #foo, a => 45, b => 'xyz', c => $text}
\--


Načtení sebe sama (rekurze)
---------------------------
Blok může načíst i sám sebe, což lze použít např. pro vykreslení stromového menu.

/--html
{block #menu}
<ul>
    {foreach $menu as $item}
    <li>{if is_array($item)} {include #menu, menu => $item} {else} {$item} {/if}</li>
    {/foreach}
</ul>
{/block}
\--

Místo `{include #menu, ...}` lze psát `{include #this, ...}`, čímž odstraníme duplicitu slova `menu`.

Vícenásobná dědičnost
----------------------
Šablona může dědit od šablony, která dědí zase od jiné šablony. Toho lze využít pro tvorbu komplikovanějších layoutů.
