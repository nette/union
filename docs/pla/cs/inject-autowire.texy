Inject Autowire
***************

.[perex]
Pokud se budeme řídit pravidlem >>Zapomeňte že existuje nějaký `$this->context`<< budeme si muset do presenteru předat závistlosti jinak.

Jednou z novinek v "Nette 2.0.5":http://forum.nette.org/en/1074-nette-framework-2-0-5-released je autowire pomocí *inject* metod v presenteru. Ve své podstatě se jedná o *setter injection* s jedním rozdílem oproti běžnému setteru. Bežný setter je možné volat opakovaně. Inject metody se naopak smí volat pouze jednou (mohlo by totiž dojít k nečekanému chování) a metoda sama by v případě opakovaného volání měla vyhazovat výjimku.

Ukázka
======

/--php
abstract class BasePresenter extends \Nette\Application\UI\Presenter
{
	/** @var SettingsModel */
	protected $settings;

	/**
	 * @param Settings
	 */
	public function injectSettings(Settings $settingsModel)
	{
		if ($this->settings) {
			throw new \Nette\InvalidStateException('Settings model allready set');
		}
		$this->settings = $settings;
	}

	protected function beforeRender()
	{
		$this->template->appName = $this->settings->get('appName');
	}
}

class ArticlePresenter extends BasePresenter
{
	/** @var Articles */
	protected $articles;

	/**
	 * @param Articles
	 */
	public function injectArticles(Articles $articlesModel)
	{
		if ($this->articles ) {
			throw new \Nette\InvalidStateException('Articles model allready set');
		}
		$this->articles = $articles;
	}

	public function renderDetail($id)
	{
		// pochopitelně tady by měla být kontrola zda vůbec článek existuje atd.
		$this->template->article = $this->articles->find($id);
	}
}
\--

Nette nám **automaticky** do *Article* presenteru předá službu, která je instancí `Articles` a zároveň nám tam předá i službu implementující `Settings` (kterou potřebuje base presenter).

Problémy
========

Autowire je automatizace a žádná automatizace není zcela dokonalá. I inject má své mouchy.

Více implementací / instancí
----------------------------

Pokud máme takovou to inject metodu a

/--php
public function injectFoo(IFoo $foo) { ... }
\--

A v [DI | doc:cs:dependency-injection] containeru máme více služeb implementujících interface `IFoo`. Tak si s tím nette neporadí.

.[tip]
Potencionální budoucí řešení tohoto problému http://forum.nette.org/cs/11402-proof-of-concept-generics

Parametry a továrničky
----------------------

Inject umí předat do presenteru pouze služby. Neumí továrničky ani parametry.

Budoucnost
==========

V aktuální vývojové verzi Nette (2.1-dev) jsou inject metody automaticky volány i na všech službách a továrničkách v *DI* containeru. Tuto funkcionalitu je možné u jednotlivých služeb nebo továrniček vypnout.

/--neon
services:
	foo:
		class: Foo
		inject: no # vypne volání inject
\--

{{author: Patrik Votoček|1639}}
