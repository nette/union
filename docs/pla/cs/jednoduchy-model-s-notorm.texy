Jednoduchý model s NotORM
*************************

.[perex]
"NotORM":http://www.notorm.com/, knižnica na jednoduchú prácu s relačnými databázovými údajmi, je u mnohých Nette vývojárov preferovanou voľbou. Na rozdiel od "Nette\Database":http://doc10.nette.org/cs/database je vývoj NotORM vedený samostatne, autor môže flexibilnejšie reagovať na požiadavky developerov. Takisto podporuje pokročilé nastavenie menných konvencií, ktoré umožňuje používať názvy tabuliek vo forme "plurálu":http://cs.wikipedia.org/wiki/Mno%C5%BEn%C3%A9_%C4%8D%C3%ADslo.

Tento krátky tutoriál si kladie za cieľ naznačiť riešenie Modelovej vrstvy v Nette aplikáciách so zameraním na tieto požiadavky:

- *pluralizovanie* názvov tabuliek
- vylúčenie (alebo minimalizovanie) akýchkoľvek statických volaní pri práci s Modelom
- veľmi tenká Modelová vrstva s jednoduchou možnosťou rozširovania
- zachovanie *lazy* pripojenia k databáze (vylúčenie volania pripojenia v `bootstrap.php`)

Hneď na začiatok uveďme príklad práce s Modelom, ktoré nevnáša povinnosť statického volania, ale ani nenúti explicitne inštancovať triedu s Modelom.

/--code php
final class FooPresenter extends BasePresenter
{
    public function renderDefault()
    {
        $this->template->user = $this->getModel('users')->findByEmail('john.doe@example.com');
    }
}
\---

Prvé takéto volanie iniciuje pripojenie k databáze. Nejedná sa teda o skutočne lazy pripojenie iniciované prvým DB požiadavkom, ale takáto funkcionalita zväčša postačuje. Aby takéto volanie bolo dostupné vo všetkých Presenteroch, treba logicky umiestniť do `BasePresenter` definíciu metódy `getModel()`.

/--php
abstract class BasePresenter extends Nette\Application\Presenter
{
    protected function getModel($model)
    {
        return $this->getApplication()->getService('ModelLoader')->getModel($model);
    }
}
\--

Zavolanie `getModel()` v konkrétnom Presenteri v skutočnosti znamená získanie tzv. služby, ktorá nám obstaráva *naťahovanie* Modelov. Vďaka logike Nette služieb a konfigurácii v `app/config.neon` je v tomto konkrétnom prípade, pri prvom požiadavku na získanie `ModelLoader` inštancovaná a vrátená jeho trieda. Pri každom ďalšom požiadavku na `ModelLoader` je už používaná (vracaná) takto vytvorená inštancia.

To ktorá trieda sa má inštancovať pri zavolaní `$application()->getService('ModelLoader')` je nastavené, ako sme už spomenuli v hlavnom konfiguračnom súbore **`app/config.neon`**.

/--
common:
    service:
        Nette\Loaders\RobotLoader:
            option:
                directory: [%appDir%, %libsDir%]
            run: true

        ModelLoader: Proj\ModelLoader
\--

.[note]
Viac informácií o službách a ich konfigurácii nájdete "tu":http://forum.nette.org/cs/6506-jak-zaregistrovat-sluzbu-v-config-ini.

V tomto momente už teda Nette vie, ktorú triedu má inštancovať. Táto triedu bude samozrejme obsahovať metódu `getModel()`, ktorá bude vracať inštancie konkrétnych Modelov. Triedu `Proj\ModelLoader` doporučujeme umiestniť do **`libs\Proj\ModelLoader.php`**

{{tags: cookbook}}

{{author: srigi|1860}}
