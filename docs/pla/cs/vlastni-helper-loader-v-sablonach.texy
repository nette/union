Jak helperu předat proměnné?
===================

Pokud potřebujete helperu předat již existující proměnné, staticky definované hodnoty nebo data z databáze, můžete tak učinit pomocí anonymní funkce:

Pevný seznam
-----------

/--php
$genderTypes = array(
	'male' => 'muž',
	'female' => 'žena',
);

$this->template->registerHelper('gender', function($gender) use($genderTypes) {
	if (isset($genderTypes[$gender])) {
		return $genderTypes[$gender];
	}
	return 'pohlaví neznámé';
});
\--

Seznam položek z databáze
-----------
/--php
$categoryList = $this->models->categories->fetchAll();

$this->template->registerHelper('category', function($categoryId) use($categoryList) {
	if (isset($categoryList[$categoryId])) {
		return $categoryList[$categoryId];
	}
	return 'nezařazeno';
});
\--

Helper Loader
===
Dalším způsobem je napsání vlastního "helper loaderu":http://doc.nette.org/cs/templating#toc-helper-loader. Třídu můžete rozšiřovat a helpery v ní obsažené testovat a snáze přenášet do dalších projektů.

V následující ukázce jsou loaderu v duchu **Dependency Injection** předávány potřebné služby, které lze využít pro **přístup do databáze**, k **definovaným parametrům**, k **cestám do složek `temp`, `app`** apod.

/--php
class MyHelpers extends Nette\Object
{

	private $model;

	private $httpRequest;

	public function __construct($model, Nette\Http\IRequest $httpRequest)
	{
		$this->model = $model;
		$this->httpRequest = $httpRequest;
	}

	public function loader($helper)
	{
		if (method_exists($this, $helper)) {
			return callback($this, $helper);
		}
	}

	/**
	 * Data z databáze
	 */
	public function helperName($arg)
	{
		return $this->model->fce($arg);
	}

	/**
	 * Zobrazení profilovky
	 */
	public function profilePicture($filename)
	{
		$basePath = $this->httpRequest->url->scriptPath;
		$profilePhoto = "...$filename";
		if ($filename) { // má profilovku
			return '<img src="' . $basePath . '/photos/' . $profilePhoto . '">';
		} else { // nemá profilovku
			return '<img src="' . $basePath . '/photos/noPhoto.jpg">';
		}
	}

}
\--

.[tip]
Pokud potřebujete v helperu funkcionalitu poskytovanou presenterem (např. **přesměrování**, **tvorbu odkazů** (`$presenter->link(...)`) a další), přidejte si do loaderu službu `@application`. Presenter bude v době renderování šablony dostupný přes `$application->getPresenter()`.

Jak jej registrovat?
---

Nejprve si loader zaregistrujeme jako službu v konfiguraci aplikace:

/--neon
common:
	services:
		myTemplateHelpers:
			factory: MyHelpers( @model, @httpRequest )
\--

`Helper loader` můžeme registrovat např. v BasePresenter.php.
/--php
abstract class BasePresenter extends Nette\Application\UI\Presenter
{

	/**
	 * MyHelpers
	 */
	public function createTemplate($class = NULL)
	{
		$template = parent::createTemplate($class);
		$template->registerFilter(new Nette\Latte\Engine); // pro funkčnost latte

		$helpers = $this->context->myTemplateHelpers;
		$template->registerHelperLoader(array($helpers, 'loader'));

		return $template;
	}

}
\--

{{tags: cookbook}}

{{author: Schmutzka|3194}}
