FAQ aneb časté dotazy
*********************

Zde naleznete odpovědi na nejčastěji kladené dotazy. Pokud vám nejsou jasné některé používané pojmy koukněte se do [slovníčku pojmů | doc:cs:Slovník]. .[perex]


Změna adresářové struktury
===

Některé webhostingové společnosti nedovolují umístit soubory vaší webové aplikace jinam než do složky *www*.

1. Stačí přesunout složky *app*, *libs*, *log* a *temp* do *www*

[* dirs.png *]

2. Následně **upravit** `index.php`

/--php
// absolute filesystem path to the application root
define('APP_DIR', WWW_DIR . '/app');

// absolute filesystem path to the libraries
define('LIBS_DIR', WWW_DIR . '/libs');
\--

3. A v `bootstrap.php` **změníme cesty** pro logy a temp.

/--php
$configurator->enableDebugger(__DIR__ . '/../log');
$configurator->setTempDirectory(__DIR__ . '/../temp');
\--

.[warning]
Nezapomeňte zkontrolovat zda *app*, *libs*, *log* a *temp* obsahují *".htaccess"((pokud používáte IIS tak se jedná o web.config))* se zákazem přístupu do této složky, aby vám někdo nemohl přečíst konfigurační soubory či logy s chybami. (http://example.com/app/config/config.neon)

Zachování rozdělení a .htaccess
---

Nebo můžete rozdělení složek zachovat a využít `.htaccess` a `RewriteRule`:
/--code
Options -Indexes +FollowSymLinks

RewriteEngine On
RewriteCond %{HTTP_HOST} ^(www\.)?example\.com$
RewriteRule ^$ www/ [L]
RewriteCond %{HTTP_HOST} ^(www\.)?example\.com$
RewriteRule (.*) www/$1 [L]
\--


Bílá stránka po nahrání na hosting
===

Postupně projdeme tyto kroky:

1) Smažeme obsah složky *temp/cache*
2) Zkontrolujeme zda je povolen zápis tam kam má být povolen (tj. `log/` a `temp/`)
3) Zkusíme odkomentovat `RewriteBase` v *.htaccess*
4) Zapneme laděnku



Zrušení persistentního parametru
===

Podíváme se do presenteru, jakou má nastavenou výchozí hodnotu

/--php
/** @persistent int */
public $page;
\--

a tu mu předáme při vytváření odkazu

/--html
<a href="{link someAction 'page' => NULL}">someWhere</a>
<!-- nebo -->
<a n:href="SomeAction, page => NULL">somweshWere</a>
\--



Použítí `{}` v šabloně
===

Latte filter používá `{}` jako "řídící" znaky. Pokud potřebujete v šabloně napsat `{}` (například u javascriptu) musíte za `{` udělat mezeru pak následující část nebude brána jako makro.

Lze také použít latte macra `{l}` resp. `{r}` pro vykreslení levé resp. pravé závorky.



Texy!
===

Na statické *Texy!* je filter:

/--php
public function templatePrepareFilters($template)
{
	parent::templatePrepareFilters($template);

	$texy = new Texy();
	$template->registerFilter(callback($texy, 'process'));
}
\--

Na dynamické *Texy!* je helper:

/--php
protected function createTemplate()
{
	$template = parent::createTemplate();

	$template->registerHelper('texy', callback(new Texy(), 'process'));
	return $template;
}
\--



Odkazování v modulech
===

/--html
<!-- Relativní odkaz na modul -->
<a href="{plink Foo:Default:default}">link</a>
<!-- nebo -->
<a n:href="Foo:Default:default">link</a>

<!-- Absolutní odkaz na modul -->
<a href="{plink :Foo:Default:default}">link</a>
<!-- nebo -->
<a n:href=":Foo:Default:default">link</a>
\--


{{themeicon: icon-help-button.png}}
{{sidebar: no}}
