NetteTranslator installation
****************************

.[perex]
Tutorial to quick and simple integration in *Nette 2.0.6 (2012-10-01)*.


- Excludes any manipuliation with .po/.mo files.
- **Plural is automaticly added** (no *Undefined offset: 1*).
- Enabled **language change**.
- [Source files|https://github.com/Schmutzka/NetteTranslator] (git)
- [Thread on forum to former version |http://forum.nette.org/cs/4758-nettetranslator-gettexttranslator-nette-translation-panel]


Installation
===

Place sources files ("download in .zip":https://github.com/Schmutzka/NetteTranslator/zipball/master) e.g. into `libs\NetteTranslator`.

config.neon
---

- set default languagek
- add service `translator` and it's factory
- add one or more files we will work with
- register into debug panel

/--
common:
	parameters:
		lang: cs

	services:
		translator:
			factory: NetteTranslator\Gettext::getTranslator
			setup:
				- addFile(%appDir%/lang, front)
				- NetteTranslator\Panel::register
\--



BasePresenter.php
---

How to change language:

/--php
/** @persistent */
public $lang;

/** @var NetteTranslator\Gettext */
protected $translator;


/**
 * Inject translator
 * @param NetteTranslator\Gettext
 */
public function injectTranslator(NetteTranslator\Gettext $translator)
{
	$this->translator = $translator;
}


public function createTemplate($class = NULL)
{
	$template = parent::createTemplate($class);

	// if not set, use the one from config (default)
	if (!isset($this->lang)) {
		$this->lang = $this->context->parameters["lang"];
	}

	$this->translator->setLang($this->lang); // set language
	$template->setTranslator($this->translator);

	return $template;
}
\--


@layout.latte
---

Now we add links that enabled language change into template.

/--html
Choose language:
<a n:href="this, lang => en">English</a>
<a n:href="this, lang => cs">ÄŒesky</a>
\--

We get following urls:
/--html
site.com/?lang=en
site.com/?lang=cs
\--

If we setup lang default value in `BasePresenter.php`, its value will not be displayed in the url, e.g. for `$lang = en` urls will look like this:

/--html
site.com/
site.com/?lang=cs
\--

Next step might be nicer lang "routing":http://doc.nette.org/en/routing#toc-optional-sequences.

/--html
site.com/en/
site.com/cs/
\--


Use
===

In templates
---

Plural version is set as default for Czech forms (1 piece, 2-4 pieces, 5+/0 pieces), so you don't have to manipulate .po/.mo files or use Poedit (viz [git |https://github.com/Schmutzka/NetteTranslator/blob/master/Gettext.php#L469]).


/--html
{_"Login"}

{_"piece", $number}
1 piece <!-- $number = 1; -->
2 pieces <!-- $number = 2; -->
5 pieces <!-- $number = 5; -->
\--

In forms
---

/--php
protected function createComponentMyForm()
{
    $form = new Form;
    // ...

    $form->setTranslator($this->translator);
}
\--



FlashMessage
---

/--php
// BasePresenter

public function flashMessage($message, $type = "info")
{
	$message = $this->translator->translate($message);
	return parent::flashMessage($message, $type);
}
\--


{{lang: cs/zprovozneni-prekladace-nettetranslator}}


/---comment
config.neon
----
    netteTranslator:
        lang: cs
        files:
            front: %appDir%/lang # for module Front and other non-specified modules
			admin: %appDir/lang-admin # for module Admin
		# optional with defaults
		layout: horizontal # or: vertical
		height: 450


Bootstrap.php
----
    // this is new
    $configurator->onCompile[] = function ($configurator, $compiler) {
        $compiler->addExtension('netteTranslator', new NetteTranslator\DI\Extension);
    };

    // put new lines before the following line
    $container = $configurator->createContainer();


Or you can use *extensions* part in *config.neon* since **Nette 2.1-dev** instead of registration in *bootstrap.php*.

**config.neon**

	extensions:
		netteTranslator: NetteTranslator\DI\Extension


---


Usage
===



BasePresenter.php
----
Basic usage + language change

    /** @persistent */
    public $lang;

    /** @var NetteTranslator\Gettext */
    protected $translator;


    /**
     * Inject translator
     * @param NetteTranslator\Gettext
     */
    public function injectTranslator(NetteTranslator\Gettext $translator)
    {
        $this->translator = $translator;
    }


    public function createTemplate($class = NULL)
    {
    	$template = parent::createTemplate($class);

    	// if not set, the default language will be used
    	if (!isset($this->lang)) {
    		$this->lang = $this->translator->getLang();
    	}

    	$this->translator->setLang($this->lang);
    	$template->setTranslator($this->translator);

    	return $template;
    }
\---

{{author: Schmutzka|3194}}
