Different layout in administration
*****************

1. one-presenter administration, `AdminPresenter.php`
=====

Handful for simple and small administration.


Directory structure
---

/---
app/
+-- models/
+-- presenters/
	+-- AdminPresenter.php
	+-- BasePresenter.php
	+-- HomepagePresenter.php
+-- templates/
	+-- Admin/
	    +-- default.latte
	+-- Homepage/
	    ...
	+-- @layout.latte // basic layout
	+-- @layoutAdmin.latte // admin layout
+-- bootstrap.php
\---

a) templates/Admin/default.latte
---

/---html
<!-- use adminLayout.latte -->
{layout "../@layoutAdmin.latte"}

\--

b) or we can modify structure like this:
---

/--
+-- templates/
	+-- Admin/
	    +-- default.latte
	    +-- @layout.latte
	+-- Homepage/
	    ...
	+-- @layout.latte
\--

and template `Admin/@layout.latte` will load for `AdminPresenter.php` automatically.
See "automatic layout loader":doc:presenters#toc-templates


c) or AdminBasePresenter
---

We still have `@layoutAdmin.latte` as in variant *A*

/--php
abstract class AdminBasePresenter extends BasePresenter
{
	protected function beforeRender()
	{
		parent::beforeRender();
		$this->setLayout('layoutAdmin');
	}
}
\--


2. Modules - Front & Admin
---

Divide application to two separated modules with their own `@layout.latte`.

See "MVC Applications & Presenters":doc:presenters#toc-modules

3. Divide into presenters with maintaining modularity (advanced)
---
See [AdminModule vs BackendPresenter | http://www.aceblog.cz/php/adminmodule-vs-backendpresenter/]

{{author: Schmutzka|3194}}
