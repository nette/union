How to pass values to helper / Helper Loader
===

If you need to pass a helper already defined values or database results, you can do it through anynomous function.


Static list
-----------

/--php
$genderTypes = array(
	'ma' => 'Male',
	'f' => 'Female',
);

$this->template->registerHelper('gender', function($gender) use($genderTypes) {
	if (isset($genderTypes[$gender])) {
		return $genderTypes[$gender];
	}
	return 'gender unknown';
});
\--

Items list from database
-----------
/--php
$categoryList = $this->models->categories->fetchAll();

$this->template->registerHelper('category', function($categoryId) use($categoryList) {
	if (isset($categoryList[$categoryId])) {
		return $categoryList[$categoryId];
	}
	return 'unknown';
});
\--

Helper Loader
===

Another and easily extendible solution is using your own "helper loaderu":http://doc.nette.org/en/templating#toc-helper-loader.  You can extend the class and simply test them and move to other projects.


Following example respects **Dependency Injection**, so it's passing only required services, you can use to **access database**, **predefined parameters**, **path to dirs `temp`, `app`** etc.

/--php
class MyHelpers extends Nette\Object
{

	private $model;

	private $httpRequest;

	public function __construct($model, Nette\Http\IRequest $httpRequest)
	{
		$this->model = $model;
		$this->httpRequest = $httpRequest;
	}

	public function loader($helper)
	{
		if (method_exists($this, $helper)) {
			return callback($this, $helper);
		}
	}

	/**
	 * Data from database
	 */
	public function helperName($arg)
	{
		return $this->model->function($arg);
	}

	/**
	 * Display profile photo
	 */
	public function profilePicture($filename)
	{
		$basePath = $this->httpRequest->url->scriptPath;
		$profilePhoto = "...$filename";
		if ($filename) { // has profile photo
			return '<img src="' . $basePath . '/photos/' . $profilePhoto . '">';
		} else { // doesn't have
			return '<img src="' . $basePath . '/photos/noPhoto.jpg">';
		}
	}

}
\--

.[tip]
If you need use presenter functions in helper (**redirect()**, **link()** etc.), zou have to pass service `@application` through the `__construct`.
Presenter will be accessible through `$application->getPresenter()` during template rendering.


How to register helper loader?
---

Set it as a service first in application config.

/--neon
common:
	services:
		myTemplateHelpers:
			factory: MyHelpers( @model, @httpRequest )
\--

Than we can register `Helper loader` in BasePresenter.php.
/--php
abstract class BasePresenter extends Nette\Application\UI\Presenter
{

	/**
	 * MyHelpers
	 */
	public function createTemplate($class = NULL)
	{
		$template = parent::createTemplate($class);
		$template->registerFilter(new Nette\Latte\Engine); // for latter support

		$helpers = $this->context->myTemplateHelpers;
		$template->registerHelperLoader(array($helpers, 'loader'));

		return $template;
	}

}
\--

{{author: Schmutzka|3194}}
