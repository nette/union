<?php

/**
 * Nette Framework - Profiler screen template.
 *
 * @copyright  Copyright (c) 2004, 2010 David Grudl
 * @license    http://nettephp.com/license  Nette license
 * @link       http://nettephp.com
 * @category   Nette
 * @package    Nette
 *
 * @param      array     $colophons
 * @return     void
 */

/*namespace Nette;*/

?>

<style type="text/css">
/* <![CDATA[ */
	#netteProfilerContainer {
		position: fixed;
		_position: absolute;
		right: 0;
		bottom: 0;
		z-index: 23178;
	}

	#netteProfiler {
		font: normal normal 11px/1.4 Consolas, Arial;
		position: relative;
		left: -5px;
		top: -5px;
		padding: 3px;
		color: black;
		background: #EEE;
		border: 1px dotted gray;
		cursor: move;
		opacity: .70;
		=filter: alpha(opacity=70);
	}

	#netteProfiler * {
		color: inherit;
		background: inherit;
		text-align: inherit;
	}

	#netteProfilerIcon {
		position: absolute;
		right: 0;
		top: 0;
		line-height: 1;
		padding: 2px;
		color: black;
		text-decoration: none;
	}

	#netteProfiler:hover {
		opacity: 1;
		=filter: none;
	}

	#netteProfiler ul {
		margin: 0;
		padding: 0;
		width: 350px;
	}

	#netteProfiler li {
		margin: 0;
		padding: 1px;
		text-align: left;
		list-style: none;
	}

	#netteProfiler span[title] {
		border-bottom: 1px dotted gray;
		cursor: help;
	}

	#netteProfiler strong {
		color: red;
	}
/* ]]> */
</style>


<div id="netteProfilerContainer">
<div id="netteProfiler">
	<a id="netteProfilerIcon" href="#"><abbr>&#x25bc;</abbr></a
	><ul>
	<?php foreach ($colophons as $callback): ?>
	<?php foreach ((array) call_user_func($callback, 'profiler') as $line): ?><li><?php echo $line, "\n" ?></li><?php endforeach ?>
	<?php endforeach ?>
	</ul>
</div>
</div>


<script type="text/javascript">
/* <![CDATA[ */
(function(){
	var d=document, de=d.documentElement, profiler=d.getElementById('netteProfiler'), pos;

	profiler.onmousedown = function(e) {
		if (profiler.moving) { // missed mouseup out of window
			return de.onmouseup();
		}

		profiler.moving = true;
		e = e || event;
		var deltaX = parseInt(this.style.left + '0') - e.clientX,
			deltaY = parseInt(this.style.top + '0') - e.clientY;

		de.onmousemove = function(e) {
			e = e || event;
			profiler.move(e.clientX + deltaX, e.clientY + deltaY);
			return false;
		}

		de.onmouseup = function() {
			de.onmousemove = de.onmouseup = null;
			profiler.moving = false;
			return false;
		}
		return false;
	}

	profiler.move = function(x, y) {
		profiler.style.left = x = Math.max(Math.min(x, 0), -(de.clientWidth || d.body.clientWidth) + profiler.offsetWidth) + "px";
		profiler.style.top = y = Math.max(Math.min(y, 0), -(de.clientHeight || d.body.clientHeight) + profiler.offsetHeight) + "px";
		d.cookie = 'netteProfilerPosition=' + x + ':' + y + '; path=/';
	}

	profiler.toggle = function() {
		var arrow = this.getElementsByTagName('abbr')[0];
		var panel = this.nextSibling;
		var collapsed = panel.currentStyle ? panel.currentStyle.display == 'none' : getComputedStyle(panel, null).display == 'none';

		arrow.innerHTML = collapsed ? String.fromCharCode(0x25bc) : 'Profiler ' + String.fromCharCode(0x25ba);
		panel.style.display = collapsed ? 'block' : 'none';
		arrow.parentNode.style.position = collapsed ? 'absolute' : 'static';

		d.cookie = 'netteProfilerVisible=' + collapsed*1 + '; path=/';
	}

	d.getElementById('netteProfilerIcon').onclick = function() {
		profiler.toggle();
		return false;
	}

	window.onresize = function() {
		profiler.move(profiler.offsetLeft, profiler.offsetTop);
	}

	d.body.appendChild(d.getElementById('netteProfilerContainer'));

	if (d.cookie.indexOf('netteProfilerVisible=0') > -1) {
		profiler.toggle();
	}

	if (pos = d.cookie.match(/netteProfilerPosition=([0-9-]+)px:([0-9-]+)px/)) {
		profiler.move(pos[1], pos[2]);
	}
})();
/* ]]> */
</script>
