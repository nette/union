<?php
%A%

final class Template%a% extends Latte\Runtime\Template
{
	protected const BLOCKS = [
		['test' => 'blockTest', 'testargs' => 'blockTestargs', 'outer' => 'blockOuter'],
	];


	public function main(): array
	{
		extract($this->params);
?>

<?php
		$var = 10;
?>

<?php
		if ($this->getParentName()) {
			return get_defined_vars();
		}
?>

a) <?php
		$this->renderBlock('test', ['var' => 20] + ($this->hasBlock('test', true) ? get_defined_vars() : $this->params), 'html');
?>



b) <?php
		$this->renderBlock('testargs', [1] + ($this->hasBlock('testargs', true) ? get_defined_vars() : $this->params), 'html');
?>



g) <?php
		$this->renderBlock('outer', ($this->hasBlock('outer', true) ? get_defined_vars() : $this->params), 'html');
?>


<?php
		$var1 = 'outer';
		?>h) <?php
		$this->renderBlock('testargs', ($this->hasBlock('testargs', true) ? get_defined_vars() : $this->params), 'html');
?>


i) <?php
		$this->renderBlock('testargs', [null] + ($this->hasBlock('testargs', true) ? get_defined_vars() : $this->params), 'html');
		return get_defined_vars();
	}


	public function blockTest(array $__args): void
	{
		extract($__args);
		?>	This is definition #<?php echo LR\Filters::escapeHtmlText($var) /* line 5 */ ?>

<?php
	}


	public function blockTestargs(array $__args): void
	{
		extract($this->params);
		[$var1, $var2, $var3] = $__args + [null, null, null, ];
		?>	Variables <?php echo LR\Filters::escapeHtmlText($var1) /* line 11 */ ?>, <?php echo LR\Filters::escapeHtmlText($var2) /* line 11 */ ?>, <?php
		echo LR\Filters::escapeHtmlText($hello) /* line 11 */ ?>

<?php
	}


	public function blockOuter(array $__args): void
	{
		extract($__args);
		$this->renderBlock('testargs', ['hello'] + ($this->hasBlock('testargs', true) ? get_defined_vars() : $this->params), 'html');

	}

}
