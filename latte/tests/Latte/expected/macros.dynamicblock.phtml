<?php
%A%

class Template%a% extends Latte\Template
{
	public $blocks = [
		'static' => 'blockStatic',
	];

	public $blockTypes = [
		'static' => 'html',
	];


	function render()
	{
%A%
		// main template
?>

<?php
		call_user_func(reset($this->blockQueue['static']), get_defined_vars());
?>


<?php
		$iterations = 0;
		foreach ($iterator = $this->global->its[] = new LR\CachingIterator(['dynamic', 'static']) as $name) {
			$this->checkBlockContentType('html', $name);
			$this->blockQueue[$name][] = [$this, 'blockName'];
			call_user_func(reset($this->blockQueue[$name]), get_defined_vars());
?>

<?php
			$iterations++;
		}
		array_pop($this->global->its);
		$iterator = end($this->global->its);
?>

<?php
		if (isset($this->blockTypes['dynamic']) && $this->blockTypes['dynamic'] !== 'html') {
			trigger_error('Including block dynamic with content type ' . strtoupper($this->blockTypes['dynamic']) . ' into incompatible type HTML.', E_USER_WARNING);
		}
		$this->renderBlock('dynamic', ['var' => 20] + $this->params);
?>

<?php
		if (isset($this->blockTypes['static']) && $this->blockTypes['static'] !== 'html') {
			trigger_error('Including block static with content type ' . strtoupper($this->blockTypes['static']) . ' into incompatible type HTML.', E_USER_WARNING);
		}
		call_user_func(reset($this->blockQueue['static']), ['var' => 30] + get_defined_vars());
?>

<?php
		$_tmp = $name . '';
		if (isset($this->blockTypes[$_tmp]) && $this->blockTypes[$_tmp] !== 'html') {
			trigger_error('Including block $name . \'\' with content type ' . strtoupper($this->blockTypes[$_tmp]) . ' into incompatible type HTML.', E_USER_WARNING);
		}
		$this->renderBlock($_tmp, ['var' => 40] + $this->params);
?>

<?php
		$this->checkBlockContentType('html', "word$name");
		$this->blockQueue["word$name"][] = [$this, 'blockWord_name'];
		call_user_func(reset($this->blockQueue["word$name"]), get_defined_vars());
?>

<?php
		$this->checkBlockContentType('html', "word$name");
		$this->blockQueue["word$name"][] = [$this, 'blockWord_name_%h%'];
		call_user_func(reset($this->blockQueue["word$name"]), get_defined_vars());
?>

<?php
	}


	function prepare()
	{
		extract($this->params);
		$var = 10;
		return get_defined_vars();
	}


	function blockName($_args)
	{
		extract($_args);
		?>		Dynamic block #<?php echo LR\Filters::escapeHtml($var) /* line 10 */ ?>

<?php
	}


	function blockWord_name($_args)
	{
		extract($_args);

	}


	function blockWord_name_%h%($_args)
	{
		extract($_args);

	}


	function blockStatic($_args)
	{
		extract($_args);
		?>	Static block #<?php echo LR\Filters::escapeHtml($var) /* line 4 */ ?>

<?php
	}

}
