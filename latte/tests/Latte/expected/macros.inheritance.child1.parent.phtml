<?php
%A%

class Template%a% extends Latte\Template
{
	public $blocks = [
		'title' => 'blockTitle',
		'sidebar' => 'blockSidebar',
	];

	public $blockTypes = [
		'title' => 'html',
		'sidebar' => 'html',
	];


	function render()
	{

		// prolog Latte\Macros\CoreMacros
		if ($this->initialize($_args)) return;
		extract($_args);

		// main template
		?>
<!DOCTYPE html>
<head>
	<title><?php
		call_user_func(reset($this->blockQueue['title']), get_defined_vars());
		?></title>
</head>

<body>
	<div id="sidebar">
<?php
		call_user_func(reset($this->blockQueue['sidebar']), get_defined_vars());
		?>
	</div>

	<div id="content">
<?php
		if (isset($this->blockTypes['content']) && $this->blockTypes['content'] !== 'html') {
			trigger_error('Including block content with content type ' . strtoupper($this->blockTypes['content']) . ' into incompatible type HTML.', E_USER_WARNING);
		}
		$this->renderBlock('content', $this->params) ?>
	</div>
</body>
</html>
Parent: <?php echo LR\Filters::escapeHtml(basename($this->getReferringTemplate()->getName())) ?>/<?php echo LR\Filters::escapeHtml($this->getReferenceType()) ?>

<?php
	}


	function prepare()
	{
		extract($this->params);
		extract(['class' => NULL, 'namespace' => NULL, 'top' => TRUE], EXTR_SKIP);
		return get_defined_vars();
	}


	function blockTitle($_args)
	{
		?>My website<?php
	}


	function blockSidebar($_args)
	{
		?>		<ul>
			<li><a href="/">Homepage</a></li>
		</ul>
<?php
	}

}
