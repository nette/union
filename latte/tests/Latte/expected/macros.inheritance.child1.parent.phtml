<?php
// source: %A%

class Template%a% extends Latte\Template
{
	public $blocks = [
		'title' => ['blockTitle', 'html'],
		'sidebar' => ['blockSidebar', 'html'],
	];


	function render()
	{
		extract($this->params)
;
// prolog Latte\Macros\CoreMacros
list($_b, $_g, $_l) = $this->initialize('html')
;
// main template
extract(['class' => NULL, 'namespace' => NULL, 'top' => TRUE], EXTR_SKIP) ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
	<link rel="stylesheet" href="style.css">
	<title><?php if ($this->tryRenderParent(get_defined_vars())) return;call_user_func(reset($_b->blocks['title']), $_b, get_defined_vars())  ?></title>
</head>

<body>
	<div id="sidebar">
<?php call_user_func(reset($_b->blocks['sidebar']), $_b, get_defined_vars())  ?>
	</div>

	<div id="content">
<?php if ('html' !== $_b->types['content']) { trigger_error('Incompatible context for including block content.', E_USER_WARNING); }
$this->renderBlock($_b, 'content', $this->params) ?>
	</div>
</body>
</html>
Parent: <?php echo LFilters::escapeHtmlText(basename($this->getReferrerTemplate()->getName())) ?>
/<?php echo LFilters::escapeHtmlText($this->getReferenceType()) ?>

<?php
	}


	function blockTitle($_b, $_args)
	{	?>My website<?php
	}


	function blockSidebar($_b, $_args)
	{	?>		<ul>
			<li><a href="/">Homepage</a></li>
			<li><a href="/contact">Contact</a></li>
		</ul>
<?php
	}

}
