<?php
// source: %A%

class Template%a% extends Latte\Template
{
	public $blocks = [
		'menu' => 'blockMenu',
	];

	public $blockTypes = [
		'menu' => 'xhtml',
	];

	public $contentType = 'xhtml';


	function render()
	{

		// prolog Latte\Macros\CoreMacros
		if ($this->initialize($_args)) return;
		extract($_args);

		// main template
		?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<ul>
	<li>Escaped: <?php echo LR\Filters::escapeHtml($hello) ?></li>
	<li>Non-escaped: <?php echo $hello ?></li>
	<li>Escaped expression: <?php echo LR\Filters::escapeHtml('<' . 'b' . '>hello' . '</b>') ?></li>
	<li>Non-escaped expression: <?php echo '<' . 'b' . '>hello' . '</b>' ?></li>
	<li>Array access: <?php echo LR\Filters::escapeHtml($people[1]) ?></li>
	<li>Html: <?php echo LR\Filters::escapeHtml($el) ?></li>
	<li>Translated: <?php echo LR\Filters::escapeHtml(call_user_func($this->filters->translate, $people[1])) ?></li>
	<li>Translated string: <?php echo LR\Filters::escapeHtml(call_user_func($this->filters->translate, 'ahoj')) ?></li>
	<li>Non-escaped and translated: <?php echo call_user_func($this->filters->translate, $people[1]) ?></li>
	<li>Condition: <?php echo LR\Filters::escapeHtml($hello ? 'yes' : NULL) ?> <?php echo LR\Filters::escapeHtml($hello ? 'yes' : NULL) ?></li>
	<li>Array: <?php echo LR\Filters::escapeHtml(call_user_func($this->filters->join, $hello ? ['a', 'b', 'c'] : NULL)) ?> <?php
		echo LR\Filters::escapeHtml(call_user_func($this->filters->join, ['a', 'b', $hello ? 'c' : NULL])) ?></li>
</ul>

<input /> <input /> <input />

<input checked /> <input checked="checked" />

{ test} {"test} {'test}

<p val = <?php
		if (true) {
			?>"a"<?php
		}
		else {
			?>"b"<?php
		}
		?>> </p>

<p val0 val1 = tmp val2=tmp val3="x"></p> </p>

<p val = <?php echo LR\Filters::escapeHtmlAttrUnquoted($xss) ?> val2=<?php echo LR\Filters::escapeHtmlAttrUnquoted($mxss) ?>> </p>

<p onclick = <?php echo LR\Filters::escapeHtmlAttrUnquoted(LR\Filters::escapeJs($xss)) ?>> </p>

<p ONCLICK ="<?php echo LR\Filters::escapeHtmlAttr(LR\Filters::escapeJs($xss)) ?>" <?php echo LR\Filters::escapeHtmlAttrUnquoted($xss) ?>> </p>

<p val = /><?php echo LR\Filters::escapeHtml($xss) ?></p>

<?php echo LR\Filters::escapeHtml((string) (bool) (float) (int) (array) 10) ?>


<?php
		if ($hello) {
			?>	<?php echo LR\Filters::escapeHtml($hello) ?>

<?php
		}
		elseif ($any) {
			?>	<?php echo LR\Filters::escapeHtml($any) ?>

<?php
		}
		else {
			?>
	none
<?php
		}
		?>


<?php
		$iterations = 0;
		if (isset($this->params['foo'])) trigger_error('Variable $foo overwritten in foreach.');
		foreach ($iterator = $this->global->its[] = new LR\CachingIterator(array(TRUE)) as $foo) {
			$iterations = 0;
			if (isset($this->params['person'])) trigger_error('Variable $person overwritten in foreach.');
			foreach ($iterator = $this->global->its[] = new LR\CachingIterator($people) as $person) {
				?>	<?php
				if ($iterator->isFirst()) {
					?><ul><?php
				}
				?>

	<li id="item-<?php echo LR\Filters::escapeHtmlAttr($iterator->getCounter()) ?>" class="<?php echo LR\Filters::escapeHtmlAttr($iterator->isOdd() ? 'odd' : 'even') ?>"><?php
				echo LR\Filters::escapeHtml($person) ?></li>
	<?php
				if ($iterator->isLast()) {
					?></ul><?php
				}
				?>

<?php
				$iterations++;
			}
			array_pop($this->global->its);
			$iterator = end($this->global->its);
			$iterations++;
		}
		array_pop($this->global->its);
		$iterator = end($this->global->its);
		?>



<STYLE type="text/css">
<!--
#<?php echo LR\Filters::escapeCss($xss) ?> {
	background: blue;
}
-->
</style>



<script>
<!--
alert('</div>');

var prop = <?php echo LR\Filters::escapeJs($people) ?>;

document.getElementById(<?php echo LR\Filters::escapeJs($xss) ?>).style.backgroundColor = 'red';

var html = <?php echo LR\Filters::escapeJs($el) ?>;
-->
</script>


<SCRIPT>
/* <![CDATA[ */

var prop2 = <?php echo LR\Filters::escapeJs($people) ?>;

/* ]]> */
</script>


<p onclick =
'alert(<?php echo LR\Filters::escapeHtmlAttr(LR\Filters::escapeJs($xss)) ?>);alert("hello");'
 title='<?php echo LR\Filters::escapeHtmlAttr($xss) ?>'
 STYLE =
 "color:<?php echo LR\Filters::escapeHtmlAttr(LR\Filters::escapeCss($xss)) ?>;"
 rel="<?php echo LR\Filters::escapeHtmlAttr($xss) ?>"
 onblur="alert(<?php echo LR\Filters::escapeHtmlAttr(LR\Filters::escapeJs($xss)) ?>)"
 alt='<?php echo LR\Filters::escapeHtmlAttr($el) ?>'
 onfocus="alert(<?php echo LR\Filters::escapeHtmlAttr(LR\Filters::escapeJs($el)) ?>)"
>click on me <?php echo LR\Filters::escapeHtml($xss) ?></p>



<?php
		$counter = 0;
		call_user_func(reset($this->blockQueue['menu']), get_defined_vars());
		?>


<?php
		extract(['varx' => 2], EXTR_SKIP);
		echo LR\Filters::escapeHtml($varx) ?>

<?php
		extract(['varx' => 4], EXTR_SKIP);
		echo LR\Filters::escapeHtml($varx) ?>


<?php
		$varx = 8;
		echo LR\Filters::escapeHtml($varx) ?>

<?php
		$varx = 9;
		echo LR\Filters::escapeHtml($varx) ?>


<?php
		$now = new DateTime;
		$foo = $now->format('u');
		extract(['foo' => $now->format('u')], EXTR_SKIP) ?>



</ul>


<?php
		echo 'test';
		?>


{ }

<?php ob_start(function () {}) ?>TRUE<?php
		if (TRUE) echo ob_get_clean();
		else ob_end_clean();
		?>

<?php ob_start(function () {}) ?>FALSE<?php
		if (FALSE) echo ob_get_clean();
		else ob_end_clean();
		?>

<?php ob_start(function () {}) ?>TRUE<?php ob_start(function () {}) ?>FALSE<?php
		if (TRUE) {
			ob_end_clean();
			echo ob_get_clean();
		}
		else {
			$this->global->else = ob_get_clean();
			ob_end_clean();
			echo $this->global->else;
		}
		?>



<?php
		$this->global->switch[] = (2);
		if (FALSE) {
		}
		elseif (end($this->global->switch) === ('x')) {
			?>x
<?php
		}
		elseif (end($this->global->switch) === (2)) {
			?>y
<?php
		}
		else {
			?>z
<?php
		}
		array_pop($this->global->switch) ?>

<?php echo call_user_func($this->filters->breaklines, "\n") ?>



<button></button>

<button></button> xx
<?php
	}


	function blockMenu($_args)
	{
		extract($_args);
		?>
<ul>
<?php
		$iterations = 0;
		if (isset($this->params['item'])) trigger_error('Variable $item overwritten in foreach.');
		foreach ($iterator = $this->global->its[] = new LR\CachingIterator($menu) as $item) {
			?>	<li><?php echo LR\Filters::escapeHtml($counter++) ?> <?php
			if (is_array($item)) {
				?> <?php
				if (isset($this->blockTypes['menu']) && $this->blockTypes['menu'] !== 'xhtml') {
					trigger_error('Including block menu with content type ' . strtoupper($this->blockTypes['menu']) . ' into incompatible type XHTML.', E_USER_WARNING);
				}
				call_user_func(reset($this->blockQueue['menu']), ['menu' => $item] + get_defined_vars());
				?> <?php
			}
			else {
				echo LR\Filters::escapeHtml($item);
			}
			?></li>
<?php
			$iterations++;
		}
		array_pop($this->global->its);
		$iterator = end($this->global->its);
		?>
</ul>
<?php
	}

}
