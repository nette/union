<?php
%A%

final class Template%a% extends Latte\Runtime\Template
{

	public function main(): array
	{
%A%
		echo '<ul>
	<li>lower: ';
		echo LR\Filters::escapeHtmlText(($this->filters->lower)($hello)) /* line 2 */;
		echo '</li>
	<li>upper: ';
		echo LR\Filters::escapeHtmlText(($this->filters->upper)($hello)) /* line 3 */;
		echo '</li>
	<li>lower & capitalize: ';
		echo LR\Filters::escapeHtmlText(($this->filters->capitalize)(($this->filters->lower)($hello))) /* line 4 */;
		echo '</li>
	<li>breaklines: ';
		echo LR\Filters::escapeHtmlText(($this->filters->breaklines)($hello)) /* line 5 */;
		echo '</li>
	<li>truncate: ';
		echo LR\Filters::escapeHtmlText(($this->filters->lower)(($this->filters->truncate)($hello, "10"))) /* line 6 */;
		echo '</li>
	<li>date: ';
		echo LR\Filters::escapeHtmlText(($this->filters->date)($date, '%d.%m.%Y %H:%M:%S')) /* line 7 */;
		echo '</li>
	<li>translated: ';
		echo LR\Filters::escapeHtmlText(($this->filters->truncate)(($this->filters->translate)($hello), 3));
		echo '</li>
	<li>Translated HTML: ';
		ob_start(function () {});
		echo LR\Filters::escapeHtmlText($hello) /* line 9 */;
		$ʟ_fi = new LR\FilterInfo('html');
		echo LR\Filters::convertTo($ʟ_fi, 'html', $this->filters->filterContent("translate", $ʟ_fi, ob_get_clean()));
		echo '</li>
	<li>Translated HTML: ';
		$ʟ_fi = new LR\FilterInfo('html');
		echo LR\Filters::convertTo($ʟ_fi, 'html', $this->filters->filterContent("translate", $ʟ_fi, 'ahoj'));
		echo '</li>
	<li>Translated HTML: ';
		$ʟ_fi = new LR\FilterInfo('html');
		echo LR\Filters::convertTo($ʟ_fi, 'html', $this->filters->filterContent("translate", $ʟ_fi, 'ahoj'));
		echo '</li>
	<li>Translated HTML: ';
		echo LR\Filters::escapeHtmlText(($this->filters->translate)('ahoj|ahojahojahojahoj'));
		echo '</li>
	<li>spaces: ';
		echo LR\Filters::escapeHtmlText(($this->filters->types)($hello , '' , "" , "$hello" )) /* line 13 */;
		echo '</li>
	<li>dynamic: ';
		echo LR\Filters::escapeHtmlText(($this->filters->dynamic)($hello)) /* line 14 */;
		echo ' ';
		echo LR\Filters::escapeHtmlText(($this->filters->dynamic2)($hello)) /* line 14 */;
		echo '</li>
</ul>

<ul>
	<li>';
		echo LR\Filters::escapeHtmlText(($this->filters->h2)(($this->filters->h1)($hello))) /* line 18 */;
		echo '</li>
	<li>';
		echo ($this->filters->h2)(($this->filters->h1)($hello)) /* line 19 */;
		echo '</li>
	<li>';
		echo LR\Filters::escapeHtmlText(($this->filters->h1)(($this->filters->h2)($hello))) /* line 20 */;
		echo '</li>
	<li>';
		echo ($this->filters->h1)(($this->filters->h2)($hello)) /* line 21 */;
		echo '</li>
</ul>

<ul>
	<li>';
		echo LR\Filters::escapeHtmlText(($this->filters->types)((int)$hello*0, 0, 0.0, "0")) /* line 25 */;
		echo '</li>
	<li>';
		echo LR\Filters::escapeHtmlText(($this->filters->types)((int)$hello*1, 1, "1")) /* line 26 */;
		echo '</li>
	<li>';
		echo LR\Filters::escapeHtmlText(($this->filters->types)($hello, true, null, false)) /* line 27 */;
		echo '</li>
	<li>';
		echo LR\Filters::escapeHtmlText(($this->filters->types)($hello, TRUE, NULL, FALSE)) /* line 28 */;
		echo '</li>
	<li>';
		echo LR\Filters::escapeHtmlText(($this->filters->types)($hello, '', "", "$hello")) /* line 29 */;
		echo '</li>
</ul>



';
		ob_start(function () {});
		echo '  <a   href="#"
> test</a

>
A   A

<script>
// comment
alert();
</script>
';
		$ʟ_fi = new LR\FilterInfo('html');
		echo LR\Filters::convertTo($ʟ_fi, 'html', $this->filters->filterContent('strip', $ʟ_fi, ob_get_clean()));
		echo '



';
		ob_start(function () {});
		echo '<ul>
	<li>lower: ';
		echo LR\Filters::escapeHtmlText(($this->filters->lower)($hello)) /* line 50 */;
		echo '</li>
</ul>
';
		$ʟ_fi = new LR\FilterInfo('html');
		$capture = ob_get_length() ? new LR\Html(ob_get_clean()) : ob_get_clean();
		echo '
<p>
Captured: ';
		echo LR\Filters::escapeHtmlText($capture) /* line 55 */;
		echo '
</p>


';
		ob_start(function () {});
		echo 'Hello
';
		$ʟ_fi = new LR\FilterInfo('html');
		$capture = $this->filters->filterContent('upper', $ʟ_fi, $this->filters->filterContent('striphtml', $ʟ_fi, ob_get_length() ? new LR\Html(ob_get_clean()) : ob_get_clean()));
		echo '
<p>
Captured with modifier: ';
		echo LR\Filters::escapeHtmlText($capture) /* line 64 */;
		echo '
</p>



<p>
Nested blocks: ';
		ob_start(function () {});
		echo ' Outer   ';
		ob_start(function () {});
		echo ' Inner Block ';
		$ʟ_fi = new LR\FilterInfo('html');
		echo LR\Filters::convertTo($ʟ_fi, 'html', $this->filters->filterContent('upper', $ʟ_fi, $this->filters->filterContent('striphtml', $ʟ_fi, ob_get_clean())));
		echo '  Block ';
		$ʟ_fi = new LR\FilterInfo('html');
		echo LR\Filters::convertTo($ʟ_fi, 'html', $this->filters->filterContent('truncate', $ʟ_fi, $this->filters->filterContent('striphtml', $ʟ_fi, ob_get_clean()), 20));
		echo '
</p>


<ul>
	<li>padLeft: ';
		echo LR\Filters::escapeHtmlText(($this->filters->padleft)($hello, 20)) /* line 75 */;
		echo '</li>
	<li>padRight: ';
		echo LR\Filters::escapeHtmlText(($this->filters->padright)($hello, 20, '*')) /* line 76 */;
		echo '</li>
</ul>
';
%A%
	}

}
