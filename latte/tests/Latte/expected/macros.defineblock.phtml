<?php
%A%

class Template%a% extends Latte\Template
{
	public $blocks = [
		'test' => 'blockTest',
		'testargs' => 'blockTestargs',
	];

	public $blockTypes = [
		'test' => 'html',
		'testargs' => 'html',
	];


	function render()
	{
%A%
		// main template
?>


<?php
		if (isset($this->blockTypes['test']) && $this->blockTypes['test'] !== 'html') {
			trigger_error('Including block test with content type ' . strtoupper($this->blockTypes['test']) . ' into incompatible type HTML.', E_USER_WARNING);
		}
		call_user_func(reset($this->blockQueue['test']), ['var' => 20] + get_defined_vars());
?>


<?php
		if (isset($this->blockTypes['testargs']) && $this->blockTypes['testargs'] !== 'html') {
			trigger_error('Including block testargs with content type ' . strtoupper($this->blockTypes['testargs']) . ' into incompatible type HTML.', E_USER_WARNING);
		}
		call_user_func(reset($this->blockQueue['testargs']), [1] + get_defined_vars());

	}


	function prepare()
	{
		extract($this->params);
		$var = 10;
		return get_defined_vars();
	}


	function blockTest($_args)
	{
		extract($_args);
		?>	This is definition #<?php echo LR\Filters::escapeHtml($var) /* line 5 */ ?>

<?php
	}


	function blockTestargs($_args)
	{
		list($var1, $var2) = $_args + [NULL, NULL, ];
		?>	Variables <?php echo LR\Filters::escapeHtml($var1) /* line 11 */ ?>, <?php echo LR\Filters::escapeHtml($var2) /* line 11 */ ?>

<?php
	}

}
