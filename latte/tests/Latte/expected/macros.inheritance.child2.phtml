<?php
// source: %A%

class Template%a% extends Latte\Template
{
	public $blocks = [
		'content' => ['blockContent', 'html'],
		'title' => ['blockTitle', 'html'],
		'sidebar' => ['blockSidebar', 'html'],
	];


	function render()
	{
%A%
// prolog Latte\Macros\BlockMacros
// template extending

$this->local->extends = "inheritance.parent.latte"; $this->global->extended = TRUE;

if ($this->local->extends) { ob_start(function () {});}

// main template ?>


<?php if ($this->local->extends) { ob_end_clean(); return $this->renderChildTemplate($this->local->extends, get_defined_vars()); }
call_user_func(reset($_b->blocks['content']), $_b, get_defined_vars())  ?>


<?php call_user_func(reset($_b->blocks['sidebar']), $_b, get_defined_vars()) ;
	}


	function blockContent($_b, $_args)
	{
		extract($_args)
?>	<h1><?php call_user_func(reset($_b->blocks['title']), $_b, get_defined_vars())  ?></h1>

	<ul>
<?php %a% foreach ($people as $person) { ?>
		<li><?php echo LFilters::escapeHtmlText($person) ?></li>
<?php $iterations++; } ?>
	</ul>
<?php
	}


	function blockTitle($_b, $_args)
	{	?>Homepage <?php
	}


	function blockSidebar($_b, $_args)
	{

	}

}
