<?php

/**
 * Nette Framework - InstantClientScript template.
 *
 * @copyright  Copyright (c) 2004, 2010 David Grudl
 * @license    http://nette.org/license  Nette license
 * @link       http://nette.org
 * @category   Nette
 * @package    Nette\Forms
 *
 * @param      string    $formName
 * @param      this      InstantClientScript
 * @return     void
 */

namespace Nette\Forms;

use Nette;

?>
<!-- Nette Form validator -->

<script type="text/javascript">
/* <![CDATA[ */

var nette = nette || { };

nette.getValue = function(elem) {
	if (!elem) {
		return void 0;
	}

	if (!elem.nodeName) { // radio
		for (var i = 0, len = elem.length; i < len; i++) {
			if (elem[i].checked) {
				return elem[i].value;
			}
		}
		return null;
	}

	if (elem.nodeName.toLowerCase() === 'select') {
		var index = elem.selectedIndex, options = elem.options;

		if (index < 0) {
			return null;

		} else if (elem.type === 'select-one') {
			return options[index].value;
		}

		for (var i = 0, values = [], len = options.length; i < len; i++) {
			if (options[i].selected) {
				values.push(options[i].value);
			}
		}
		return values;
	}

	if (elem.type === 'checkbox') {
		return elem.checked;
	}

	return elem.value.replace(/^\s+|\s+$/g, '');
}


nette.validateControl = function(elem, rules, onlyCheck) {
	rules = rules || eval(elem.getAttribute('data-rules'));
	if (!rules) return true;

	for (var id in rules) {
		var rule = rules[id];
		var el = elem.form.elements[rule.control];

		var success = nette.validateRule(el, rule.operation, rule.arg);
		if (success === null) continue;
		if (rule.neg) success = !success;

		if (rule.cond && success) {
			if (!nette.validateControl(elem, rule.rules, onlyCheck)) {
				return false;
			}
		} else if (!rule.cond && !success) {
			if (el.disabled) continue;
			if (!onlyCheck) {
				nette.addError(el, rule.message.replace('%value', nette.getValue(el)));
			}
			return false;
		}
	}
	return true;
}


nette.validateForm = function(sender) {
	var form = sender.form || sender;
	for (var i = 0; i < form.elements.length; i++) {
		if (!nette.validateControl(form.elements[i])) {
			return false;
		}
	}
	return true;
}


nette.addError = function(elem, message) {
	if (elem.focus) {
		elem.focus();
	}
	if (message) {
		alert(message);
	}
}


nette.validateRule = function(elem, op, arg) {
	var val = nette.getValue(elem);

	if (!elem.nodeName) { // radio
		if (op === ':filled') {
			return val !== null;
		}

	} else if (elem.nodeName.toLowerCase() === 'select') { // select box
		var first = elem.getAttribute('data-first-skip') === null ? 0 : 1;

		if (op === ':equal' && elem.type !== 'select-one') {
			arg = arg instanceof Array ? arg : [arg];
			for (var len = elem.options.length, option; first < len; first++) {
				if ((option = elem.options[first]).selected) {
					for (var i in arg) {
						if (option.value == (arg[i].control ? nette.getValue(elem.form.elements[arg[i].control]) : arg[i])) return true;
					}
				}
			}
			return false;
		}

		if (op === ':filled') {
			return elem.selectedIndex >= first;
		}

	} else if (elem.type.toLowerCase() in {submit:1, image:1, button:1}) { // button
		if (op === ':submitted') {
			return elem.form['nette-submittedBy'] === elem.name;
		}

	} else if (elem.type.toLowerCase() in {checkbox:1, file:1, reset:1, hidden:1}) {
		// continue to common rules

	} else if (elem.nodeName.toLowerCase() === 'textarea' || elem.nodeName.toLowerCase() === 'input') { // textual element
		switch (op) {
		case ':filled':
			return val != '' && val != elem.getAttribute('data-empty-value');

		case ':minLength':
			return val.length >= arg;

		case ':maxLength':
			return val.length <= arg;

		case ':length':
			if (typeof arg !== 'object') {
				arg = [arg, arg];
			}
			return (arg[0] === null || val.length >= arg[0]) && (arg[1] === null || val.length <= arg[1]);

		case ':email':
			return /^[^@\s]+@[^@\s]+\.[a-z]{2,10}$/i.test(val);

		case ':url':
			return /^.+\.[a-z]{2,6}(\/.*)?$/i.test(val);

		case ':regexp':
			var parts = arg.match(/^\/(.*)\/([imu]*)$/);
			if (parts) try {
				return (new RegExp(parts[1], parts[2].replace('u', ''))).test(val);
			} catch (e) {}
			return;

		case ':integer':
			return /^-?[0-9]+$/.test(val);

		case ':float':
			return /^-?[0-9]*[.,]?[0-9]+$/.test(val);

		case ':range':
			return (arg[0] === null || parseFloat(val) >= arg[0]) && (arg[1] === null || parseFloat(val) <= arg[1]);
		}
	}

	// common rules
	switch (op) {
	case ':filled':
		return val != '';

	case ':valid':
		return nette.validateControl(elem, null, true);

	case ':equal':
		arg = arg instanceof Array ? arg : [arg];
		for (var i in arg) {
			if (val == (arg[i].control ? nette.getValue(elem.form.elements[arg[i].control]) : arg[i])) return true;
		}
		return false;
	}
}


nette.toggleForm = function(form) {
	for (var i = 0; i < form.elements.length; i++) {
		nette.toggleControl(form.elements[i]);
	}
}


nette.toggleControl = function(elem, rules, firsttime) {
	rules = rules || eval(elem.getAttribute('data-rules'));
	if (!rules) return;

	var has = false;
	for (var id in rules) {
		var rule = rules[id];
		if (!rule.cond) continue;

		var el = elem.form.elements[rule.control];
		var success = nette.validateRule(el, rule.operation, rule.arg);
		if (success === null) continue;
		if (rule.neg) success = !success;

		if (nette.toggleControl(elem, rule.rules, firsttime) || rule.toggle) {
			has = true;
			if (firsttime) {
				if (!el.nodeName) { // radio
					for (var i in el) {
						el[i].onclick = function() { nette.toggleForm(elem.form); };
					}
				} else if (el.nodeName.toLowerCase() === 'select') {
					el.onchange = function() { nette.toggleForm(elem.form); };
				} else {
					el.onclick = function() { nette.toggleForm(elem.form); };
				}
			}
			for (var id in rule.toggle || []) {
				nette.toggle(id, success ? rule.toggle[id] : !rule.toggle[id]);
			}
		}
	}
	return has;
}


nette.toggle = function(id, visible) {
	var elem = document.getElementById(id);
	if (elem) {
		elem.style.display = visible ? "" : "none";
	}
}


nette.initForm = function(form) {
	form.onsubmit = function() {
		return nette.validateForm(form);
	};

	form.onclick = function(e) {
		e = e || event;
		var target = e.target || e.srcElement;
		form['nette-submittedBy'] = (target.type in {submit:1, image:1}) ? target.name : null;
	};

	for (var i = 0; i < form.elements.length; i++) {
		nette.toggleControl(form.elements[i], null, true);
	}

	if (/MSIE/.exec(navigator.userAgent)) {
		var labels = {};
		for (i = 0, elms = form.getElementsByTagName('label'); i < elms.length; i++) {
			labels[elms[i].htmlFor] = elms[i];
		}

		for (i = 0, elms = form.getElementsByTagName('select'); i < elms.length; i++) {
			elms[i].onmousewheel = function() { return false };	// prevents accidental change in IE
			if (labels[elms[i].htmlId]) {
				labels[elms[i].htmlId].onclick = function() { document.getElementById(this.htmlFor).focus(); return false }; // prevents deselect in IE 5 - 6
			}
		}
	}
}


nette.initForm(document.getElementById(<?php echo $formName ?>));

/* ]]> */
</script>

<!-- /Nette Form validator -->
